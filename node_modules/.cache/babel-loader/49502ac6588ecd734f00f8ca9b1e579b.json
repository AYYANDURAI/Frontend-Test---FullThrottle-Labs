{"ast":null,"code":"var _jsxFileName = \"E:\\\\users-info\\\\src\\\\Tables.js\";\nimport React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport moment from 'moment';\nimport './Table.css';\n\nfunction Tables({\n  userInfo\n}) {\n  const formatDate = date => {\n    const ye = new Intl.DateTimeFormat('en', {\n      year: 'numeric'\n    }).format(date);\n    const mo = new Intl.DateTimeFormat('en', {\n      month: 'short'\n    }).format(date);\n    const da = new Intl.DateTimeFormat('en', {\n      day: '2-digit'\n    }).format(date);\n    const time = date.toLocaleString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n    const format = mo + ' ' + da + ' ' + ye + ' ' + time;\n    return format;\n  };\n\n  const [selectedEndDate, setSelectedEndDate] = useState(formatDate(new Date()));\n  const [selectedStartDate, setSelectedStartDate] = useState(formatDate(new Date()));\n  const [show, setShow] = useState(false);\n\n  const dateSplit = date => {\n    const t = date.split(' ');\n    t[1] = t[1].length === 1 ? '0' + t[1] : t[1];\n    t.pop();\n    return t.join(' ');\n  };\n\n  const handleStartDateChange = startDate => {\n    const formattedDate = formatDate(startDate);\n    setSelectedStartDate(formattedDate);\n    setShow(true);\n  };\n\n  const handleEndDateChange = EndDate => {\n    const formattedDate = formatDate(EndDate);\n    setSelectedEndDate(formattedDate);\n    setShow(true);\n  };\n\n  let showFilteredData = userInfo.activity_periods.filter(time => {\n    const t = dateSplit(time.start_time);\n    const st = selectedStartDate.split(' ').slice(0, 3).join(' ');\n    const et = selectedEndDate.split(' ').slice(0, 3).join(' ');\n    console.log(t + \" \" + st + \" \" + et);\n    return moment(t).isSame(st) || moment(t).isBetween(st, et);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal__fade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    format: \"MMM dd yyyy\",\n    id: \"startDate-picker-dialog\",\n    label: \"Start Date\",\n    value: selectedStartDate,\n    onChange: handleStartDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    format: \"MMM dd yyyy\",\n    id: \"endDate-picker-dialog\",\n    label: \"Select End Date\",\n    value: selectedEndDate,\n    onChange: handleEndDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table\",\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, \"End Time\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, show ? showFilteredData.map((time, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: time.start_time + i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }\n  }, time.start_time), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 49\n    }\n  }, time.end_time))) : userInfo.activity_periods.map((time, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: time.start_time + i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 49\n    }\n  }, time.start_time), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 49\n    }\n  }, time.end_time)))))))));\n}\n\nexport default Tables;","map":{"version":3,"sources":["E:/users-info/src/Tables.js"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DateFnsUtils","Grid","MuiPickersUtilsProvider","KeyboardDatePicker","moment","Tables","userInfo","formatDate","date","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","time","toLocaleString","hour","minute","hour12","selectedEndDate","setSelectedEndDate","Date","selectedStartDate","setSelectedStartDate","show","setShow","dateSplit","t","split","length","pop","join","handleStartDateChange","startDate","formattedDate","handleEndDateChange","EndDate","showFilteredData","activity_periods","filter","start_time","st","slice","et","console","log","isSame","isBetween","map","i","end_time"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport './Table.css';\r\n\r\nfunction Tables({ userInfo }) {\r\n\r\n    const formatDate = (date) => {\r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\r\n        const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(date);\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\r\n        const time = date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n        const format = mo + ' ' + da + ' ' + ye + ' ' + time;\r\n        return format;\r\n    }\r\n    const [selectedEndDate, setSelectedEndDate] = useState(formatDate(new Date()));\r\n    const [selectedStartDate, setSelectedStartDate] = useState(formatDate(new Date()));\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n    const dateSplit = (date) => {\r\n        const t = date.split(' ');\r\n        t[1] = t[1].length === 1 ? '0' + t[1] : t[1];\r\n        t.pop();\r\n        return t.join(' ');\r\n    }\r\n    const handleStartDateChange = (startDate) => {\r\n        const formattedDate = formatDate(startDate);\r\n        setSelectedStartDate(formattedDate);\r\n        setShow(true);\r\n    };\r\n\r\n    const handleEndDateChange = (EndDate) => {\r\n        const formattedDate = formatDate(EndDate);\r\n        setSelectedEndDate(formattedDate);\r\n        setShow(true);\r\n    };\r\n    let showFilteredData = userInfo.activity_periods.filter((time) => {\r\n        const t = dateSplit(time.start_time);\r\n        const st = selectedStartDate.split(' ').slice(0, 3).join(' ');\r\n        const et = selectedEndDate.split(' ').slice(0, 3).join(' ');\r\n        console.log(t + \" \" + st + \" \" + et);\r\n        return moment(t).isSame(st) || moment(t).isBetween(st, et);\r\n    });\r\n    return (\r\n        <div>\r\n            <div className=\"modal__fade\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            format='MMM dd yyyy'\r\n                            id=\"startDate-picker-dialog\"\r\n                            label=\"Start Date\"\r\n                            value={selectedStartDate}\r\n                            onChange={handleStartDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            format='MMM dd yyyy'\r\n                            id=\"endDate-picker-dialog\"\r\n                            label=\"Select End Date\"\r\n                            value={selectedEndDate}\r\n                            onChange={handleEndDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <div className=\"table\">\r\n                    <TableContainer component={Paper}>\r\n                        <Table className=\"table\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" fontWeight=\"bold\">Start Time</TableCell>\r\n                                    <TableCell align=\"left\" fontWeight=\"bold\">End Time</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    show ?\r\n                                        showFilteredData.map((time, i) => (\r\n                                            <TableRow key={time.start_time + i}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {time.start_time}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">{time.end_time}</TableCell>\r\n                                            </TableRow>\r\n                                        )) : userInfo.activity_periods.map((time, i) => (\r\n                                            <TableRow key={time.start_time + i}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {time.start_time}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">{time.end_time}</TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                }\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}