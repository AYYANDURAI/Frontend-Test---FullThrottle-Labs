{"ast":null,"code":"var _jsxFileName = \"E:\\\\users-info\\\\src\\\\Tables.js\";\nimport React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport moment from 'moment';\nimport './Table.css';\n\nfunction Tables({\n  userInfo\n}) {\n  const [selectedEndDate, setSelectedEndDate] = useState(new Date());\n  const [selectedStartDate, setSelectedStartDate] = useState(new Date());\n\n  const formatDate = date => {\n    const ye = new Intl.DateTimeFormat('en', {\n      year: 'numeric'\n    }).format(date);\n    const mo = new Intl.DateTimeFormat('en', {\n      month: 'short'\n    }).format(date);\n    const da = new Intl.DateTimeFormat('en', {\n      day: '2-digit'\n    }).format(date);\n    const time = date.toLocaleString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n    const format = mo + ' ' + da + ' ' + ye + ' ' + time; //console.log(format);\n\n    return format;\n  }; // const dateSplit = (date) => {\n  //     const t = date.split(' ');\n  //     t[1] = t[1].length === 1 ? '0' + t[1] : t[1];\n  //     t.pop();\n  //     return t.join(' ');\n  // }\n\n\n  const handleStartDateChange = startDate => {\n    const formattedDate = formatDate(startDate);\n    setSelectedStartDate(formattedDate);\n  };\n\n  const handleEndDateChange = EndDate => {\n    const formattedDate = formatDate(EndDate);\n    setSelectedEndDate(formattedDate);\n  }; //console.log(selectedStartDate + \"  \" + selectedEndDate);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal__fade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    format: \"MMM dd yyyy hh:mm a\",\n    id: \"startDate-picker-dialog\",\n    label: \"Start Date\",\n    value: selectedStartDate,\n    onChange: handleStartDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    format: \"MMM dd yyyy hh:mm a\",\n    id: \"endDate-picker-dialog\",\n    label: \"End Date\",\n    value: selectedEndDate,\n    onChange: handleEndDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table\",\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, \"End Time\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, userInfo.activity_periods.filter(time => {\n    console.log(time.start_time + \" \" + time.end_time);\n    console.log(selectedStartDate + \" \" + selectedEndDate);\n    return moment(time.start_time).isSameOrAfter(selectedStartDate) && moment(time.end_time).isSameOrBefore(selectedEndDate);\n  }).map((time, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: time.start_time + i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  }, time.start_time), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  }, time.end_time)))))))));\n}\n\nexport default Tables;","map":{"version":3,"sources":["E:/users-info/src/Tables.js"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DateFnsUtils","Grid","MuiPickersUtilsProvider","KeyboardDatePicker","moment","Tables","userInfo","selectedEndDate","setSelectedEndDate","Date","selectedStartDate","setSelectedStartDate","formatDate","date","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","time","toLocaleString","hour","minute","hour12","handleStartDateChange","startDate","formattedDate","handleEndDateChange","EndDate","activity_periods","filter","console","log","start_time","end_time","isSameOrAfter","isSameOrBefore","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SACIC,uBADJ,EAEIC,kBAFJ,QAGO,sBAHP;AAIA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,aAAP;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAC1B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,IAAIiB,IAAJ,EAAD,CAAtD;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CnB,QAAQ,CAAC,IAAIiB,IAAJ,EAAD,CAA1D;;AAEA,QAAMG,UAAU,GAAIC,IAAD,IAAU;AACzB,UAAMC,EAAE,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAA9B,EAAmDC,MAAnD,CAA0DL,IAA1D,CAAX;AACA,UAAMM,EAAE,GAAG,IAAIJ,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAA9B,EAAkDF,MAAlD,CAAyDL,IAAzD,CAAX;AACA,UAAMQ,EAAE,GAAG,IAAIN,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AAAEM,MAAAA,GAAG,EAAE;AAAP,KAA9B,EAAkDJ,MAAlD,CAAyDL,IAAzD,CAAX;AACA,UAAMU,IAAI,GAAGV,IAAI,CAACW,cAAL,CAAoB,OAApB,EAA6B;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,MAAM,EAAE,SAA3B;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAA7B,CAAb;AACA,UAAMT,MAAM,GAAGC,EAAE,GAAG,GAAL,GAAWE,EAAX,GAAgB,GAAhB,GAAsBP,EAAtB,GAA2B,GAA3B,GAAiCS,IAAhD,CALyB,CAMzB;;AACA,WAAOL,MAAP;AACH,GARD,CAJ0B,CAa1B;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMU,qBAAqB,GAAIC,SAAD,IAAe;AACzC,UAAMC,aAAa,GAAGlB,UAAU,CAACiB,SAAD,CAAhC;AACAlB,IAAAA,oBAAoB,CAACmB,aAAD,CAApB;AACH,GAHD;;AAKA,QAAMC,mBAAmB,GAAIC,OAAD,IAAa;AACrC,UAAMF,aAAa,GAAGlB,UAAU,CAACoB,OAAD,CAAhC;AACAxB,IAAAA,kBAAkB,CAACsB,aAAD,CAAlB;AACH,GAHD,CAxB0B,CA4B1B;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAE9B,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AACI,IAAA,MAAM,EAAC,QADX;AAEI,IAAA,MAAM,EAAC,qBAFX;AAGI,IAAA,EAAE,EAAC,yBAHP;AAII,IAAA,KAAK,EAAC,YAJV;AAKI,IAAA,KAAK,EAAEU,iBALX;AAMI,IAAA,QAAQ,EAAEkB,qBANd;AAOI,IAAA,mBAAmB,EAAE;AACjB,oBAAc;AADG,KAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAYI,oBAAC,kBAAD;AACI,IAAA,MAAM,EAAC,QADX;AAEI,IAAA,MAAM,EAAC,qBAFX;AAGI,IAAA,EAAE,EAAC,uBAHP;AAII,IAAA,KAAK,EAAC,UAJV;AAKI,IAAA,KAAK,EAAErB,eALX;AAMI,IAAA,QAAQ,EAAEwB,mBANd;AAOI,IAAA,mBAAmB,EAAE;AACjB,oBAAc;AADG,KAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ,CADJ,eA2BI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEhC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,kBAAW,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAwB,IAAA,UAAU,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAwB,IAAA,UAAU,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,CADJ,eAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,QAAQ,CAAC2B,gBAAT,CAA0BC,MAA1B,CAAkCX,IAAD,IAAU;AACxCY,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACc,UAAL,GAAkB,GAAlB,GAAwBd,IAAI,CAACe,QAAzC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY1B,iBAAiB,GAAG,GAApB,GAA0BH,eAAtC;AACA,WAAQH,MAAM,CAACmB,IAAI,CAACc,UAAN,CAAN,CAAwBE,aAAxB,CAAsC7B,iBAAtC,KACJN,MAAM,CAACmB,IAAI,CAACe,QAAN,CAAN,CAAsBE,cAAtB,CAAqCjC,eAArC,CADJ;AAEH,GALA,EAKEkC,GALF,CAKM,CAAClB,IAAD,EAAOmB,CAAP,kBACH,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEnB,IAAI,CAACc,UAAL,GAAkBK,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,IAArB;AAA0B,IAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,IAAI,CAACc,UADV,CADJ,eAII,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBd,IAAI,CAACe,QAA9B,CAJJ,CANH,CADL,CAPJ,CADJ,CADJ,CA3BJ,CADJ,CADJ;AA4DH;;AAED,eAAejC,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport './Table.css';\r\n\r\nfunction Tables({ userInfo }) {\r\n    const [selectedEndDate, setSelectedEndDate] = useState(new Date());\r\n    const [selectedStartDate, setSelectedStartDate] = useState(new Date());\r\n\r\n    const formatDate = (date) => {\r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\r\n        const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(date);\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\r\n        const time = date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n        const format = mo + ' ' + da + ' ' + ye + ' ' + time;\r\n        //console.log(format);\r\n        return format;\r\n    }\r\n    // const dateSplit = (date) => {\r\n    //     const t = date.split(' ');\r\n    //     t[1] = t[1].length === 1 ? '0' + t[1] : t[1];\r\n    //     t.pop();\r\n    //     return t.join(' ');\r\n    // }\r\n    const handleStartDateChange = (startDate) => {\r\n        const formattedDate = formatDate(startDate);\r\n        setSelectedStartDate(formattedDate);\r\n    };\r\n\r\n    const handleEndDateChange = (EndDate) => {\r\n        const formattedDate = formatDate(EndDate);\r\n        setSelectedEndDate(formattedDate);\r\n    };\r\n    //console.log(selectedStartDate + \"  \" + selectedEndDate);\r\n    return (\r\n        <div>\r\n            <div className=\"modal__fade\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            format='MMM dd yyyy hh:mm a'\r\n                            id=\"startDate-picker-dialog\"\r\n                            label=\"Start Date\"\r\n                            value={selectedStartDate}\r\n                            onChange={handleStartDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            format='MMM dd yyyy hh:mm a'\r\n                            id=\"endDate-picker-dialog\"\r\n                            label=\"End Date\"\r\n                            value={selectedEndDate}\r\n                            onChange={handleEndDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <div className=\"table\">\r\n                    <TableContainer component={Paper}>\r\n                        <Table className=\"table\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" fontWeight=\"bold\">Start Time</TableCell>\r\n                                    <TableCell align=\"left\" fontWeight=\"bold\">End Time</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {userInfo.activity_periods.filter((time) => {\r\n                                    console.log(time.start_time + \" \" + time.end_time);\r\n                                    console.log(selectedStartDate + \" \" + selectedEndDate);\r\n                                    return (moment(time.start_time).isSameOrAfter(selectedStartDate) &&\r\n                                        moment(time.end_time).isSameOrBefore(selectedEndDate));\r\n                                }).map((time, i) => (\r\n                                    <TableRow key={time.start_time + i}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {time.start_time}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">{time.end_time}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}