{"ast":null,"code":"import _slicedToArray from\"E:\\\\users-info\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import DateFnsUtils from'@date-io/date-fns';import Grid from'@material-ui/core/Grid';import{MuiPickersUtilsProvider,KeyboardDatePicker}from'@material-ui/pickers';import moment from'moment';import'./Table.css';function Tables(_ref){var userInfo=_ref.userInfo;var formatDate=function formatDate(date){var ye=new Intl.DateTimeFormat('en',{year:'numeric'}).format(date);var mo=new Intl.DateTimeFormat('en',{month:'short'}).format(date);var da=new Intl.DateTimeFormat('en',{day:'2-digit'}).format(date);var time=date.toLocaleString('en-US',{hour:'numeric',minute:'numeric',hour12:true});var format=mo+' '+da+' '+ye+' '+time;return format;};var _useState=useState(formatDate(new Date())),_useState2=_slicedToArray(_useState,2),selectedEndDate=_useState2[0],setSelectedEndDate=_useState2[1];var _useState3=useState(formatDate(new Date())),_useState4=_slicedToArray(_useState3,2),selectedStartDate=_useState4[0],setSelectedStartDate=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),show=_useState6[0],setShow=_useState6[1];var dateSplit=function dateSplit(date){var t=date.split(' ');t[1]=t[1].length===1?'0'+t[1]:t[1];t.pop();return t.join(' ');};var handleStartDateChange=function handleStartDateChange(startDate){var formattedDate=formatDate(startDate);setSelectedStartDate(formattedDate);setShow(true);};var handleEndDateChange=function handleEndDateChange(EndDate){var formattedDate=formatDate(EndDate);setSelectedEndDate(formattedDate);setShow(true);};var showFilteredData=userInfo.activity_periods.filter(function(time){var t=dateSplit(time.start_time);var st=selectedStartDate.split(' ').slice(0,3).join(' ');var et=selectedEndDate.split(' ').slice(0,3).join(' ');console.log(t+\" \"+st+\" \"+et);return moment(t).isSame(st)||moment(t).isBetween(st,et);});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"modal__fade\"},/*#__PURE__*/React.createElement(MuiPickersUtilsProvider,{utils:DateFnsUtils},/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"space-around\"},/*#__PURE__*/React.createElement(KeyboardDatePicker,{margin:\"normal\",format:\"MMM dd yyyy\",id:\"startDate-picker-dialog\",label:\"Select Start Date\",value:selectedStartDate,onChange:handleStartDateChange,KeyboardButtonProps:{'aria-label':'change date'}}),/*#__PURE__*/React.createElement(KeyboardDatePicker,{margin:\"normal\",format:\"MMM dd yyyy\",id:\"endDate-picker-dialog\",label:\"Select End Date\",value:selectedEndDate,onChange:handleEndDateChange,KeyboardButtonProps:{'aria-label':'change date'}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"table\"},/*#__PURE__*/React.createElement(TableContainer,{component:Paper},/*#__PURE__*/React.createElement(Table,{className:\"table\",\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{align:\"left\",fontWeight:\"bold\"},\"Start Time\"),/*#__PURE__*/React.createElement(TableCell,{align:\"left\",fontWeight:\"bold\"},\"End Time\"))),/*#__PURE__*/React.createElement(TableBody,null,show?showFilteredData.map(function(time,i){return/*#__PURE__*/React.createElement(TableRow,{key:time.start_time+i},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},time.start_time),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},time.end_time));}):userInfo.activity_periods.map(function(time,i){return/*#__PURE__*/React.createElement(TableRow,{key:time.start_time+i},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},time.start_time),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},time.end_time));})))))));}export default Tables;","map":{"version":3,"sources":["E:/users-info/src/Tables.js"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DateFnsUtils","Grid","MuiPickersUtilsProvider","KeyboardDatePicker","moment","Tables","userInfo","formatDate","date","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","time","toLocaleString","hour","minute","hour12","Date","selectedEndDate","setSelectedEndDate","selectedStartDate","setSelectedStartDate","show","setShow","dateSplit","t","split","length","pop","join","handleStartDateChange","startDate","formattedDate","handleEndDateChange","EndDate","showFilteredData","activity_periods","filter","start_time","st","slice","et","console","log","isSame","isBetween","map","i","end_time"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport './Table.css';\r\n\r\nfunction Tables({ userInfo }) {\r\n\r\n    const formatDate = (date) => {\r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\r\n        const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(date);\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\r\n        const time = date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n        const format = mo + ' ' + da + ' ' + ye + ' ' + time;\r\n        return format;\r\n    }\r\n    const [selectedEndDate, setSelectedEndDate] = useState(formatDate(new Date()));\r\n    const [selectedStartDate, setSelectedStartDate] = useState(formatDate(new Date()));\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n    const dateSplit = (date) => {\r\n        const t = date.split(' ');\r\n        t[1] = t[1].length === 1 ? '0' + t[1] : t[1];\r\n        t.pop();\r\n        return t.join(' ');\r\n    }\r\n    const handleStartDateChange = (startDate) => {\r\n        const formattedDate = formatDate(startDate);\r\n        setSelectedStartDate(formattedDate);\r\n        setShow(true);\r\n    };\r\n\r\n    const handleEndDateChange = (EndDate) => {\r\n        const formattedDate = formatDate(EndDate);\r\n        setSelectedEndDate(formattedDate);\r\n        setShow(true);\r\n    };\r\n    let showFilteredData = userInfo.activity_periods.filter((time) => {\r\n        const t = dateSplit(time.start_time);\r\n        const st = selectedStartDate.split(' ').slice(0, 3).join(' ');\r\n        const et = selectedEndDate.split(' ').slice(0, 3).join(' ');\r\n        console.log(t + \" \" + st + \" \" + et);\r\n        return moment(t).isSame(st) || moment(t).isBetween(st, et);\r\n    });\r\n    return (\r\n        <div>\r\n            <div className=\"modal__fade\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            format='MMM dd yyyy'\r\n                            id=\"startDate-picker-dialog\"\r\n                            label=\"Select Start Date\"\r\n                            value={selectedStartDate}\r\n                            onChange={handleStartDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            format='MMM dd yyyy'\r\n                            id=\"endDate-picker-dialog\"\r\n                            label=\"Select End Date\"\r\n                            value={selectedEndDate}\r\n                            onChange={handleEndDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <div className=\"table\">\r\n                    <TableContainer component={Paper}>\r\n                        <Table className=\"table\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" fontWeight=\"bold\">Start Time</TableCell>\r\n                                    <TableCell align=\"left\" fontWeight=\"bold\">End Time</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    show ?\r\n                                        showFilteredData.map((time, i) => (\r\n                                            <TableRow key={time.start_time + i}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {time.start_time}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">{time.end_time}</TableCell>\r\n                                            </TableRow>\r\n                                        )) : userInfo.activity_periods.map((time, i) => (\r\n                                            <TableRow key={time.start_time + i}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {time.start_time}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">{time.end_time}</TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                }\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}