{"ast":null,"code":"var _jsxFileName = \"E:\\\\users-info\\\\src\\\\Tables.js\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport './Table.css';\n\nfunction Tables({\n  userInfo\n}) {\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n\n  const handleStartDateChange = startDate => {\n    const ye = new Intl.DateTimeFormat('en', {\n      year: 'numeric'\n    }).format(startDate);\n    const mo = new Intl.DateTimeFormat('en', {\n      month: 'short'\n    }).format(startDate);\n    const da = new Intl.DateTimeFormat('en', {\n      day: '2-digit'\n    }).format(startDate);\n    const ho = new Intl.DateTimeFormat('en', {\n      hour: \"2-digit\"\n    }).format(startDate);\n    const mi = new Intl.DateTimeFormat('en', {\n      minute: \"2-digit\"\n    }).format(startDate);\n    const time = startDate.toLocaleString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n    setSelectedStartDate(mo + ' ' + da + ' ' + ye + ' ' + time);\n  };\n\n  const handleEndDateChange = EndDate => {\n    setSelectedEndDate(EndDate);\n  };\n\n  console.log(selectedStartDate + \"  \" + selectedEndDate);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal__fade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    format: \"MMM dd yyyy hh:mm a\",\n    id: \"startDate-picker-dialog\",\n    label: \"Start Date\",\n    value: selectedStartDate,\n    onChange: handleStartDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    format: \"MMM dd yyyy hh:mm a\",\n    id: \"endDate-picker-dialog\",\n    label: \"End Date\",\n    value: selectedEndDate,\n    onChange: handleEndDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table\",\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }, \"End Time\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, userInfo.activity_periods.map((time, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: time.start_time + i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 41\n    }\n  }, time.start_time), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 41\n    }\n  }, time.end_time)))))))));\n}\n\nexport default Tables;","map":{"version":3,"sources":["E:/users-info/src/Tables.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DateFnsUtils","Grid","MuiPickersUtilsProvider","KeyboardDatePicker","Tables","userInfo","selectedEndDate","setSelectedEndDate","useState","Date","selectedStartDate","setSelectedStartDate","handleStartDateChange","startDate","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","ho","hour","mi","minute","time","toLocaleString","hour12","handleEndDateChange","EndDate","console","log","activity_periods","map","i","start_time","end_time"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport './Table.css';\r\n\r\nfunction Tables({ userInfo }) {\r\n    const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\r\n    const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\r\n\r\n    const handleStartDateChange = (startDate) => {\r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(startDate);\r\n        const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(startDate);\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(startDate);\r\n        const ho = new Intl.DateTimeFormat('en', { hour: \"2-digit\" }).format(startDate);\r\n        const mi = new Intl.DateTimeFormat('en', { minute: \"2-digit\" }).format(startDate);\r\n        const time = startDate.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n        setSelectedStartDate(mo + ' ' + da + ' ' + ye + ' ' + time);\r\n    };\r\n\r\n    const handleEndDateChange = (EndDate) => {\r\n        setSelectedEndDate(EndDate);\r\n    };\r\n    console.log(selectedStartDate + \"  \" + selectedEndDate);\r\n    return (\r\n        <div>\r\n            <div className=\"modal__fade\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            format='MMM dd yyyy hh:mm a'\r\n                            id=\"startDate-picker-dialog\"\r\n                            label=\"Start Date\"\r\n                            value={selectedStartDate}\r\n                            onChange={handleStartDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            format='MMM dd yyyy hh:mm a'\r\n                            id=\"endDate-picker-dialog\"\r\n                            label=\"End Date\"\r\n                            value={selectedEndDate}\r\n                            onChange={handleEndDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <div className=\"table\">\r\n                    <TableContainer component={Paper}>\r\n                        <Table className=\"table\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" fontWeight=\"bold\">Start Time</TableCell>\r\n                                    <TableCell align=\"left\" fontWeight=\"bold\">End Time</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {userInfo.activity_periods.map((time, i) => (\r\n                                    <TableRow key={time.start_time + i}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {time.start_time}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">{time.end_time}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}